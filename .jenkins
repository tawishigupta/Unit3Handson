pipeline {
    agent any
    
    environment {
        PROJECT_NAME = "ECommerce Application"
        REPO_PATH = "C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\first pipieline@2"
        PYTHON_PATH = "C:\\Users\\sansk\\AppData\\Local\\Programs\\Python\\Python312\\python.exe"
        PYTEST_PATH = "C:\\Users\\sansk\\AppData\\Local\\Programs\\Python\\Python312\\Scripts\\pytest.exe"
        SELENIUM_PATH = "C:\\Users\\sansk\\Downloads\\CodeGym-main\\Part 5 - Unit Testing\\SELENIUM\\Testing\\runAllTestSuites.bat"
        DOCKER_IMAGE_NAME = "code_gym_image"
        DOCKER_CONTAINER_NAME = "code_gym_container"
        //DOCKERHUB_REPO = "sanskar22003/code_gym_image:latest"
    }
    
    stages {
        stage('Stage 1: Cloning Repository...') {
            steps {
                echo "Project Name: ${env.PROJECT_NAME}"
                ws("${env.REPO_PATH}") {
                    git branch: 'main', credentialsId: '65fd2953-20c8-47ac-90a5-de4ab6edf5a', url: 'https://github.com/sanskar22003/CodeGym.git'
                }
            }
        }
        stage('Stage 2: Running Unit TestCases...') {
            steps {
                dir("${env.REPO_PATH}") {
                    catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                        bat "${env.PYTEST_PATH}"
                    }
                }
            }
        }
        stage('Stage 3: Run SELENIUM Web App TestCases') {
            steps {
                echo 'Running Selenium TestCases...'
                dir("${env.REPO_PATH}") {
                    catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                        bat "${env.PYTEST_PATH}"
                    }
                }
            }
        }
        stage('Stage 4: Build and Run Docker Image') {
            steps {
                echo 'Building Docker Image...'
                dir("${env.REPO_PATH}") {
                    script {
                        // Build Docker image
                        bat "docker build -t ${env.DOCKER_IMAGE_NAME} ."

                        // Run Docker container
                        bat "docker run --name ${env.DOCKER_CONTAINER_NAME} -d -p 5000:5000 ${env.DOCKER_IMAGE_NAME}"
                    }
                }
            }
        }
        //stage('Stage 5: Push Docker Image to DockerHub') {
            //steps {
                //echo 'Pushing Docker Image to DockerHub...'
                //script {
                    //withCredentials([string(credentialsId: 'dockerhub-credentials', variable: 'DOCKERHUB_PASSWORD')]) {
                        //bat "echo ${DOCKERHUB_PASSWORD} | docker login -u your_dockerhub_username --password-stdin"
                        //bat "docker tag ${env.DOCKER_IMAGE_NAME} ${env.DOCKERHUB_REPO}"
                        //bat "docker push ${env.DOCKERHUB_REPO}"
                    //}
                //}
            //}
        //}
    }
}
